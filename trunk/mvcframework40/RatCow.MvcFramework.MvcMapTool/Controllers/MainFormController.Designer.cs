/*Auto generated - this code was generated by the MvcFramework compiler, created by RatCow Soft - 
 See http://code.google.com/p/ratcowsoftopensource/ */ 

using System; 
using System.Windows.Forms;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;

//3rd Party
using RatCow.MvcFramework;

namespace RatCow.MvcFramework.MvcMapTool
{
	internal partial class MainFormController
	{
		public MainFormController() : base()
		{
		}

		partial void closeButtonClick(EventArgs e);
		partial void saveButtonClick(EventArgs e);
		partial void removeControlClick(EventArgs e);
		partial void addControlClick(EventArgs e);
		partial void removeEventClick(EventArgs e);
		partial void addEventClick(EventArgs e);
		partial void removeGeneralButtonClick(EventArgs e);
		partial void addGeneralButtonClick(EventArgs e);
		partial void controlDetailListViewClick(EventArgs e);
		partial void controlDetailListViewDoubleClick(EventArgs e);
		partial void controlDetailListViewSelectedIndexChanged(EventArgs e);
		protected virtual void controlDetailListViewRetrieveVirtualItem(RetrieveVirtualItemEventArgs e)
		{
			/*we will first try to get an item from the partial method*/
			ListViewItem item = null; //set to a known value
			controlDetailListViewGetItem(ref item, e); //try to get the value from partial implementation
			if (item == null) //if, null, save ourselves from crashing 
			{
			/*default placeholder to avoid crashes*/
			item = new ListViewItem();

			/*we need to provide a value for each column*/
			int count = (controlDetailListView.Columns.Count);
			if (count > 1)
			{
				item.Text = "Temp value";
				for (int i = 1; i < count; i++)
				{
					item.SubItems.Add("Temp Subitem");
				}	
			}
		}

			e.Item = item;
		}

		partial void controlDetailListViewGetItem(ref ListViewItem item, RetrieveVirtualItemEventArgs e);
		partial void controlsListViewClick(EventArgs e);
		partial void controlsListViewDoubleClick(EventArgs e);
		partial void controlsListViewSelectedIndexChanged(EventArgs e);
		protected virtual void controlsListViewRetrieveVirtualItem(RetrieveVirtualItemEventArgs e)
		{
			/*we will first try to get an item from the partial method*/
			ListViewItem item = null; //set to a known value
			controlsListViewGetItem(ref item, e); //try to get the value from partial implementation
			if (item == null) //if, null, save ourselves from crashing 
			{
			/*default placeholder to avoid crashes*/
			item = new ListViewItem();

			/*we need to provide a value for each column*/
			int count = (controlsListView.Columns.Count);
			if (count > 1)
			{
				item.Text = "Temp value";
				for (int i = 1; i < count; i++)
				{
					item.SubItems.Add("Temp Subitem");
				}	
			}
		}

			e.Item = item;
		}

		partial void controlsListViewGetItem(ref ListViewItem item, RetrieveVirtualItemEventArgs e);
		partial void globalEventsListViewClick(EventArgs e);
		partial void globalEventsListViewDoubleClick(EventArgs e);
		partial void globalEventsListViewSelectedIndexChanged(EventArgs e);
		protected virtual void globalEventsListViewRetrieveVirtualItem(RetrieveVirtualItemEventArgs e)
		{
			/*we will first try to get an item from the partial method*/
			ListViewItem item = null; //set to a known value
			globalEventsListViewGetItem(ref item, e); //try to get the value from partial implementation
			if (item == null) //if, null, save ourselves from crashing 
			{
			/*default placeholder to avoid crashes*/
			item = new ListViewItem();

			/*we need to provide a value for each column*/
			int count = (globalEventsListView.Columns.Count);
			if (count > 1)
			{
				item.Text = "Temp value";
				for (int i = 1; i < count; i++)
				{
					item.SubItems.Add("Temp Subitem");
				}	
			}
		}

			e.Item = item;
		}

		partial void globalEventsListViewGetItem(ref ListViewItem item, RetrieveVirtualItemEventArgs e);
	}


#region GUI glue code

	partial class MainFormController
	{
		[Outlet("closeButton")]
		public Button closeButton { get; set; }
		[Action("closeButton", "Click")]
		public void FcloseButton_Click(object sender, EventArgs e)
		{
			//Auto generated call
			closeButtonClick(e);
		}

		[Outlet("saveButton")]
		public Button saveButton { get; set; }
		[Action("saveButton", "Click")]
		public void FsaveButton_Click(object sender, EventArgs e)
		{
			//Auto generated call
			saveButtonClick(e);
		}

		[Outlet("removeControl")]
		public Button removeControl { get; set; }
		[Action("removeControl", "Click")]
		public void FremoveControl_Click(object sender, EventArgs e)
		{
			//Auto generated call
			removeControlClick(e);
		}

		[Outlet("addControl")]
		public Button addControl { get; set; }
		[Action("addControl", "Click")]
		public void FaddControl_Click(object sender, EventArgs e)
		{
			//Auto generated call
			addControlClick(e);
		}

		[Outlet("removeEvent")]
		public Button removeEvent { get; set; }
		[Action("removeEvent", "Click")]
		public void FremoveEvent_Click(object sender, EventArgs e)
		{
			//Auto generated call
			removeEventClick(e);
		}

		[Outlet("addEvent")]
		public Button addEvent { get; set; }
		[Action("addEvent", "Click")]
		public void FaddEvent_Click(object sender, EventArgs e)
		{
			//Auto generated call
			addEventClick(e);
		}

		[Outlet("removeGeneralButton")]
		public Button removeGeneralButton { get; set; }
		[Action("removeGeneralButton", "Click")]
		public void FremoveGeneralButton_Click(object sender, EventArgs e)
		{
			//Auto generated call
			removeGeneralButtonClick(e);
		}

		[Outlet("addGeneralButton")]
		public Button addGeneralButton { get; set; }
		[Action("addGeneralButton", "Click")]
		public void FaddGeneralButton_Click(object sender, EventArgs e)
		{
			//Auto generated call
			addGeneralButtonClick(e);
		}

		[Outlet("controlDetailListView")]
		public ListView controlDetailListView { get; set; }
		[Action("controlDetailListView", "Click")]
		public void FcontrolDetailListView_Click(object sender, EventArgs e)
		{
			//Auto generated call
			controlDetailListViewClick(e);
		}

		[Action("controlDetailListView", "DoubleClick")]
		public void FcontrolDetailListView_DoubleClick(object sender, EventArgs e)
		{
			//Auto generated call
			controlDetailListViewDoubleClick(e);
		}

		[Action("controlDetailListView", "SelectedIndexChanged")]
		public void FcontrolDetailListView_SelectedIndexChanged(object sender, EventArgs e)
		{
			//Auto generated call
			controlDetailListViewSelectedIndexChanged(e);
		}

		protected ListViewHelper<T> GetcontrolDetailListViewHelper<T>() where T : class
		{
			//Auto generated call
			var lvh = new ListViewHelper<T>(controlDetailListView);
			return lvh;
		}

		[Action("controlDetailListView", "RetrieveVirtualItem")]
		public void FcontrolDetailListView_RetrieveVirtualItem(object sender, RetrieveVirtualItemEventArgs e)
		{
			//Auto generated call
			controlDetailListViewRetrieveVirtualItem(e);
		}

		[Outlet("controlsListView")]
		public ListView controlsListView { get; set; }
		[Action("controlsListView", "Click")]
		public void FcontrolsListView_Click(object sender, EventArgs e)
		{
			//Auto generated call
			controlsListViewClick(e);
		}

		[Action("controlsListView", "DoubleClick")]
		public void FcontrolsListView_DoubleClick(object sender, EventArgs e)
		{
			//Auto generated call
			controlsListViewDoubleClick(e);
		}

		[Action("controlsListView", "SelectedIndexChanged")]
		public void FcontrolsListView_SelectedIndexChanged(object sender, EventArgs e)
		{
			//Auto generated call
			controlsListViewSelectedIndexChanged(e);
		}

		protected ListViewHelper<T> GetcontrolsListViewHelper<T>() where T : class
		{
			//Auto generated call
			var lvh = new ListViewHelper<T>(controlsListView);
			return lvh;
		}

		[Action("controlsListView", "RetrieveVirtualItem")]
		public void FcontrolsListView_RetrieveVirtualItem(object sender, RetrieveVirtualItemEventArgs e)
		{
			//Auto generated call
			controlsListViewRetrieveVirtualItem(e);
		}

		[Outlet("globalEventsListView")]
		public ListView globalEventsListView { get; set; }
		[Action("globalEventsListView", "Click")]
		public void FglobalEventsListView_Click(object sender, EventArgs e)
		{
			//Auto generated call
			globalEventsListViewClick(e);
		}

		[Action("globalEventsListView", "DoubleClick")]
		public void FglobalEventsListView_DoubleClick(object sender, EventArgs e)
		{
			//Auto generated call
			globalEventsListViewDoubleClick(e);
		}

		[Action("globalEventsListView", "SelectedIndexChanged")]
		public void FglobalEventsListView_SelectedIndexChanged(object sender, EventArgs e)
		{
			//Auto generated call
			globalEventsListViewSelectedIndexChanged(e);
		}

		protected ListViewHelper<T> GetglobalEventsListViewHelper<T>() where T : class
		{
			//Auto generated call
			var lvh = new ListViewHelper<T>(globalEventsListView);
			return lvh;
		}

		[Action("globalEventsListView", "RetrieveVirtualItem")]
		public void FglobalEventsListView_RetrieveVirtualItem(object sender, RetrieveVirtualItemEventArgs e)
		{
			//Auto generated call
			globalEventsListViewRetrieveVirtualItem(e);
		}

		protected void SetData<T>(ListViewHelper<T> helper, List<T> data) where T : class
		{
			//Auto generated call
			Type t = helper.GetType();
			t.InvokeMember("SetData", BindingFlags.Default | BindingFlags.InvokeMethod, null, helper, new object[] { data });
		}

	}
#endregion /*GUI glue code*/

}

